{"version":3,"sources":["webpack:///./client/modules/HelloWorld/HelloWorldWrapper.js","webpack:///./client/reducers.js","webpack:///./client/App.scss?f030","webpack:///./client/App.js","webpack:///./client/modules/HelloWorld/HelloWorld.js","webpack:///./client/modules/HelloWorld/HelloWorldReducer.js","webpack:///./client/App.scss","webpack:///./client/modules/HelloWorld/HelloWorldActions.js"],"names":["mapStateToProps","state","serverTimestamp","mapDispatchToProps","dispatch","onFetchServerTimestamp","appBoot","module","exports","init","console","log","create","window","devToolsExtension","createStoreWithMiddleware","store","render","document","getElementById","HelloWorld","props","Component","propTypes","number","func","isRequired","initialState","action","timestamp","SERVER_TIMESTAMP_UPDATE","fetchServerTimestamp","get","then","res","type","data","catch","err"],"mappings":";;;;;;;;;;;;AAIA;;AAEA;;;;AACA;;;;AAEA;;;;;AAKA,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,qBAAiBD,MAAMC;AADlB,GAAP;AAGD;;AAED;;;;;AApBA;;;;AAyBA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLC,4BAAwB,kCAAM;AAC5BD,eAAS,8CAAT;AACD;AAHI,GAAP;AAKD;;kBAEc,yBACbJ,eADa,EAEbG,kBAFa,uB;;;;;;;;;;;;;;AC7Bf;;AAEA;;;;;;AANA;;;;kBAQe,4BAAgB;AAC7BD;AAD6B,CAAhB,C;;;;;;;ACRf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gCAAgC,UAAU,EAAE;AAC5C,C;;;;;;;;;;ACrBA;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AAEA;;;;AACA;;;;;;AAZA;;;;AAcA,IAAII,UAAUC,OAAOC,OAAP,GAAiB,EAA/B;;AAEAF,QAAQG,IAAR,GAAe,YAAW;AACxBC,UAAQC,GAAR,CAAY,iCAAZ;;AAEA;AACA,MAAMC,SAASC,OAAOC,iBAAP,GACbD,OAAOC,iBAAP,sBADa,qBAAf;;AAGA;AACA,MAAMC,4BAA4B,kDAAiCH,MAAjC,CAAlC;;AAEA;AACA,MAAMI,QAAQD,6CAAd;;AAEA,qBAASE,MAAT,CACE;AAAA;AAAA,MAAU,OAAQD,KAAlB;AACE;AADF,GADF,EAIEE,SAASC,cAAT,CAAwB,KAAxB,CAJF;AAMD,CAnBD;;AAqBA;AACAb,QAAQG,IAAR,G;;;;;;;;;;;;;;;;AClCA;;;;AACA;;;;;;;;;;+eALA;;;;IAOqBW,U;;;;;;;;;;;6BACV;AAAA,UAELlB,eAFK,GAGH,KAAKmB,KAHF,CAELnB,eAFK;;;AAKP,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA;AAAA;AAAgBA;AAAhB;AAFF,OADF;AAMD;;;wCAEmB;AAClB,WAAKmB,KAAL,CAAWhB,sBAAX;AACD;;;;EAhBqC,gBAAMiB,S;;AAmB9C;;;kBAnBqBF,U;AAoBrBA,WAAWG,SAAX,GAAuB;AACrBrB,mBAAiB,oBAAUsB,MADN;AAErBnB,0BAAwB,oBAAUoB,IAAV,CAAeC;AAFlB,CAAvB,C;;;;;;;;;;;;;;ACvBA;;AAEA;;kNANA;;;;AAUA,IAAMC,eAAe,IAArB;;kBAEe,iGACc,UAAC1B,KAAD,EAAQ2B,MAAR,EAAmB;AAC5C,SAAOA,OAAOC,SAAd;AACD,CAHY,GAIZF,YAJY,C;;;;;;;ACZf;AACA;;;AAGA;AACA,qDAAsD,mBAAmB,EAAE;;AAE3E;;;;;;;;;;;;;;;;ACHA;;;;;;AAEO,IAAMG,4DAA0B,yBAAhC;;AAEP;;;;;AARA;;;;AAaO,IAAMC,sDAAuB,SAAvBA,oBAAuB,GAAM;AACxC,SAAO,UAAS3B,QAAT,EAAmB;AACxB,oBAAM4B,GAAN,CAAU,iBAAV,EACGC,IADH,CACQ,UAACC,GAAD,EAAS;AACb9B,eAAS;AACP+B,cAAML,uBADC;AAEPD,mBAAWK,IAAIE,IAAJ,CAASP;AAFb,OAAT;AAID,KANH,EAOGQ,KAPH,CAOS,UAACC,GAAD,EAAS;AACd5B,cAAQC,GAAR,CAAY2B,GAAZ;AACD,KATH;AAUD,GAXD;AAYD,CAbM,C","file":"js/app.js","sourcesContent":["/**\n * @fileOverview The Hello World container.\n */\n\nimport { connect } from 'react-redux';\n\nimport HelloWorld from './HelloWorld';\nimport { fetchServerTimestamp } from './HelloWorldActions';\n\n/**\n * Handle state change and map it to local component props.\n *\n * @param {Object} state The new app state.\n */\nfunction mapStateToProps(state) {\n  return {\n    serverTimestamp: state.serverTimestamp,\n  };\n}\n\n/**\n * Map dispatch actions to props.\n *\n * @param {Function} dispatch The dispatch func.\n */\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onFetchServerTimestamp: () => {\n      dispatch(fetchServerTimestamp());\n    },\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HelloWorld);\n\n\n\n// WEBPACK FOOTER //\n// ./client/modules/HelloWorld/HelloWorldWrapper.js","/**\n * @fileOverview The root reducer, combines all reducers.\n */\n\nimport { combineReducers } from 'redux';\n\nimport serverTimestamp from './modules/HelloWorld/HelloWorldReducer';\n\nexport default combineReducers({\n  serverTimestamp,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./client/reducers.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./App.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../node_modules/style-loader/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./App.scss\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./App.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/App.scss\n// module id = 142\n// module chunks = 0","/**\n * @fileOverview The app main entry point.\n */\n\nimport './App.scss';\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport rootReducer from './reducers';\nimport HelloWorld from './modules/HelloWorld/HelloWorldWrapper';\n\nlet appBoot = module.exports = {};\n\nappBoot.init = function() {\n  console.log('init() :: App starts booting...');\n\n  // Check for devToolsExtension\n  const create = window.devToolsExtension ?\n    window.devToolsExtension()(createStore) : createStore;\n\n  // Apply thunk and additional middleware if applicable\n  const createStoreWithMiddleware = applyMiddleware(thunkMiddleware)(create);\n\n  // Init store\n  const store = createStoreWithMiddleware(rootReducer);\n\n  ReactDom.render(\n    <Provider store={ store }>\n      <HelloWorld />\n    </Provider>,\n    document.getElementById('app')\n  );\n};\n\n// init app\nappBoot.init();\n\n\n\n// WEBPACK FOOTER //\n// ./client/App.js","/**\n * @fileOverview The Hello World component.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class HelloWorld extends React.Component {\n  render() {\n    const {\n      serverTimestamp,\n    } = this.props;\n\n    return (\n      <div>\n        <h1>Hello World!</h1>\n        <p>Timestamp: { serverTimestamp }</p>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.props.onFetchServerTimestamp();\n  }\n}\n\n/** @const {Object} propTypes definition */\nHelloWorld.propTypes = {\n  serverTimestamp: PropTypes.number,\n  onFetchServerTimestamp: PropTypes.func.isRequired,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client/modules/HelloWorld/HelloWorld.js","/**\n * @fileOverview The Server Timestamp reducer.\n */\n\nimport {handleActions} from 'redux-actions';\n\nimport {\n  SERVER_TIMESTAMP_UPDATE,\n} from './HelloWorldActions';\n\nconst initialState = null;\n\nexport default handleActions({\n  [SERVER_TIMESTAMP_UPDATE]: (state, action) => {\n    return action.timestamp;\n  },\n}, initialState);\n\n\n\n// WEBPACK FOOTER //\n// ./client/modules/HelloWorld/HelloWorldReducer.js","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"h1,\\nh2,\\nh3,\\nh4,\\nh5,\\np {\\n  color: #231f20; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader/lib/loader.js!./client/App.scss\n// module id = 166\n// module chunks = 0","/**\n * @fileOverview Server Timestamp related actions.\n */\n\nimport axios from 'axios';\n\nexport const SERVER_TIMESTAMP_UPDATE = 'SERVER_TIMESTAMP_UPDATE';\n\n/**\n * Update server timestamp.\n *\n * @return {Function} The action handler.\n */\nexport const fetchServerTimestamp = () => {\n  return function(dispatch) {\n    axios.get('/home/timestamp')\n      .then((res) => {\n        dispatch({\n          type: SERVER_TIMESTAMP_UPDATE,\n          timestamp: res.data.timestamp,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client/modules/HelloWorld/HelloWorldActions.js"],"sourceRoot":""}