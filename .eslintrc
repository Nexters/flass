{
  "extends": ["eslint:recommended", "plugin:react/recommended", "airbnb"],
  "env": {
    "es6": true,
    "node": true,
    "browser": true
  },
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "parser": "babel-eslint",
  "plugins": ["react"],
  "rules": {
    ////////// JavaScript //////////
    "block-scoped-var": 0,      // treat var statements as if they were block scoped (off by default)
    "complexity": 0,            // specify the maximum cyclomatic complexity allowed in a program (off by default)
    "consistent-return": 0,     // require return statements to either always or never specify values
    "curly": 0,                 // specify curly brace conventions for all control statements
    "default-case": 0,          // require default case in switch statements (off by default)
    "dot-notation": 0,          // encourages use of dot notation whenever possible
    "eqeqeq": 0,                // require the use of === and !==
    "guard-for-in": 0,          // make sure for-in loops have an if statement (off by default)
    "no-alert": 0,              // disallow the use of alert, confirm, and prompt
    "no-caller": 0,             // disallow use of arguments.caller or arguments.callee
    "no-div-regex": 0,          // disallow division operators explicitly at beginning of regular expression (off by default)
    "no-else-return": 0,        // disallow else after a return in an if (off by default)
    "no-empty-label": 0,        // disallow use of labels for anything other then loops and switches
    "no-eq-null": 0,            // disallow comparisons to null without a type-checking operator (off by default)
    "no-eval": 0,               // disallow use of eval()
    "no-extend-native": 0,      // disallow adding to native types
    "no-extra-bind": 0,         // disallow unnecessary function binding
    "no-fallthrough": 0,        // disallow fallthrough of case statements
    "no-floating-decimal": 0,   // disallow the use of leading or trailing decimal points in numeric literals (off by default)
    "no-implied-eval": 0,       // disallow use of eval()-like methods
    "no-iterator": 0,           // disallow usage of __iterator__ property
    "no-labels": 0,             // disallow use of labeled statements
    "no-lone-blocks": 0,        // disallow unnecessary nested blocks
    "no-loop-func": 0,          // disallow creation of functions within loops
    "no-multi-spaces": 0,       // disallow use of multiple spaces
    "no-multi-str": 0,          // disallow use of multiline strings
    "no-native-reassign": 0,    // disallow reassignments of native objects
    "no-new": 0,                // disallow use of new operator when not part of the assignment or comparison
    "no-new-func": 0,           // disallow use of new operator for Function object
    "no-new-wrappers": 0,       // disallows creating new instances of String, Number, and Boolean
    "no-octal": 0,              // disallow use of octal literals
    "no-octal-escape": 0,       // disallow use of octal escape sequences in string literals, such as var foo = "Copyright \251";
    "no-process-env": 0,        // disallow use of process.env (off by default)
    "no-proto": 0,              // disallow usage of __proto__ property
    "no-redeclare": 0,          // disallow declaring the same variable more then once
    "no-return-assign": 0,      // disallow use of assignment in return statement
    "no-script-url": 0,         // disallow use of javascript: urls.
    "no-self-compare": 0,       // disallow comparisons where both sides are exactly the same (off by default)
    "no-sequences": 0,          // disallow use of comma operator
    "no-unused-expressions": 0, // disallow usage of expressions in statement position
    "no-void": 0,               // disallow use of void operator (off by default)
    "no-warning-comments": 0,   // disallow usage of configurable warning terms in comments, e.g. TODO or FIXME (off by default)
    "no-with": 0,               // disallow use of the with statement
    "radix": 0,                 // require use of the second argument for parseInt() (off by default)
    "vars-on-top": 0,           // requires to declare all vars on top of their containing scope (off by default)
    "wrap-iife": 0,             // require immediate function invocation to be wrapped in parentheses (off by default)
    "yoda": 0,                  // require or disallow Yoda conditions
    "no-catch-shadow": 0,             // disallow the catch clause parameter name being the same as a variable in the outer scope (off by default in the node environment)
    "no-delete-var": 0,               // disallow deletion of variables
    "no-label-var": 0,                // disallow labels that share a name with a variable
    "no-shadow": 0,                   // disallow declaration of variables already declared in the outer scope
    "no-shadow-restricted-names": 0,  // disallow shadowing of names such as arguments
    "no-undef": 0,                    // disallow use of undeclared variables unless mentioned in a /*global */ block
    "no-undef-init": 0,               // disallow use of undefined when initializing variables
    "no-undefined": 0,                // disallow use of undefined variable (off by default)
    "no-unused-vars": 1,              // disallow declaration of variables that are not used in the code
    "no-use-before-define": 0,        // disallow use of variables before they are defined
    "no-var": 0,          // require let or const instead of var (off by default)
    "generator-star": 0,  // enforce the position of the * in generator functions (off by default)
    "linebreak-style": 0,
    "arrow-parens": [1, "as-needed"],
    "import/prefer-default-export": 0,
    "space-before-function-paren": [1, "never"],
    "keyword-spacing": [1, {
      "before": true,
      "after": true,
      "overrides": {
        "function": { "after": false },
        "switch": { "after": false }
      }
    }],
    "no-trailing-spaces": ["error", { "skipBlankLines": true }],
    "comma-dangle": ["warn", "never"],
    "no-class-assign": 0,
    "padded-blocks": ["error", "never"],
    "eol-last": 0,
    "max-len": ["warn", 120],
    "class-methods-use-this": 0,
    "import/no-named-as-default": 0,
    "import/no-named-as-default-member": 0,
    "import/no-extraneous-dependencies": 0,
    "global-require": 0,
    "prefer-const": ["error", {"ignoreReadBeforeAssign": true}],
    "no-param-reassign": ["error", { "props": false }],
    ////////// React //////////
    "react/jsx-curly-spacing": [1, "always"],
    "react/sort-comp": [1, {
      "order": [
        "static-methods",
        "lifecycle",
        "render",
        "everything-else"
      ]
    }],
    "jsx-a11y/label-has-for": 0,
    "jsx-a11y/no-static-element-interactions": 0,
    "react/jsx-filename-extension": 0,
    "react/jsx-no-bind": 0,
    "react/prefer-stateless-function": 0,
    "react/jsx-closing-bracket-location": [1, "after-props"],
    "react/no-find-dom-node": 0
  }
}
